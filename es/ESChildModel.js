// Generated by CoffeeScript 1.11.1
var ESChildModel,
    extend = function (child, parent) {
  for (var key in parent) {
    if (hasProp.call(parent, key)) child[key] = parent[key];
  }function ctor() {
    this.constructor = child;
  }ctor.prototype = parent.prototype;child.prototype = new ctor();child.__super__ = parent.prototype;return child;
},
    hasProp = {}.hasOwnProperty;

import ESBoundModel from './ESBoundModel';

import { Instance } from 'ormojo';

export default ESChildModel = function (superClass) {
  extend(ESChildModel, superClass);

  function ESChildModel() {
    ESChildModel.__super__.constructor.apply(this, arguments);
    this.parentBoundModel = this.spec.parentBoundModel;
    if (!(this.parentBoundModel instanceof ESBoundModel)) {
      throw new Error("ESChildModel(`" + this.name + "`): parentBoundModel must be an ESBoundModel.");
    }
  }

  ESChildModel.prototype._checkParent = function (parent) {
    if (parent instanceof Instance) {
      return parent.id;
    } else if (typeof parent === 'string' || typeof parent === 'number') {
      return parent.toString();
    } else {
      throw new Error("ESChildModel(`" + this.name + "`): must provide parent object or ID as first argument");
    }
  };

  ESChildModel.prototype.findById = function (parent, id) {
    var parentId;
    parentId = this._checkParent(parent);
    if (Array.isArray(id)) {
      throw new Error("ESChildModel(`" + this.name + "`): get by array not supported with child models");
    }
    return this.backend.api.findInstanceById(this, this.backend._deserialize, this.backend, id, parentId);
  };

  ESChildModel.prototype.destroyById = function (parent, id) {
    var parentId;
    parentId = this._checkParent(parent);
    return this.backend.api.destroy(this.getIndex(), this.getDefaultType(), id, parentId);
  };

  ESChildModel.prototype.create = function (parent, data) {
    var instance, parentId;
    parentId = this._checkParent(parent);
    instance = this._createInstance();
    instance.isNewRecord = true;
    instance.__applyDefaults();
    instance._parent = parentId;
    if (data !== void 0) {
      instance.set(data);
      return instance.save();
    } else {
      return instance;
    }
  };

  ESChildModel.prototype.generateMapping = function () {
    var m;
    m = ESChildModel.__super__.generateMapping.apply(this, arguments);
    m['_parent'] = {
      type: this.parentBoundModel.getDefaultType()
    };
    m['_routing'] = {
      required: true
    };
    return m;
  };

  return ESChildModel;
}(ESBoundModel);