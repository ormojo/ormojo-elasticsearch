'use strict';

exports.__esModule = true;

var _ormojo = require('ormojo');

var _ESBoundModel = require('./ESBoundModel');

var _ESBoundModel2 = _interopRequireDefault(_ESBoundModel);

var _ESChildModel = require('./ESChildModel');

var _ESChildModel2 = _interopRequireDefault(_ESChildModel);

var _ESIndex = require('./ESIndex');

var _ESMigration = require('./ESMigration');

var _ESMigration2 = _interopRequireDefault(_ESMigration);

var _ESResultSet = require('./ESResultSet');

var _ESResultSet2 = _interopRequireDefault(_ESResultSet);

var _ESAPI = require('./ESAPI');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Generated by CoffeeScript 1.11.1
var ESBackend,
    extend = function (child, parent) {
  for (var key in parent) {
    if (hasProp.call(parent, key)) child[key] = parent[key];
  }function ctor() {
    this.constructor = child;
  }ctor.prototype = parent.prototype;child.prototype = new ctor();child.__super__ = parent.prototype;return child;
},
    hasProp = {}.hasOwnProperty;

exports.default = ESBackend = function (superClass) {
  extend(ESBackend, superClass);

  function ESBackend(es) {
    this.es = es;
    this.indices = new _ESIndex.ESIndices(this);
  }

  ESBackend.prototype.initialize = function () {
    return this.api = (0, _ESAPI.makeESAPI)(this.es, this.corpus.log, this.corpus.Promise);
  };

  ESBackend.prototype._bindModel = function (clazz, model, bindingOptions) {
    var bm;
    bm = new clazz(model, this, bindingOptions);
    this.indices.addBoundModel(bm);
    return bm;
  };

  ESBackend.prototype.bindModel = function (model, bindingOptions) {
    return this._bindModel(_ESBoundModel2.default, model, bindingOptions);
  };

  ESBackend.prototype.bindChildModel = function (childModel, bindingOptions) {
    return this._bindModel(_ESChildModel2.default, childModel, bindingOptions);
  };

  ESBackend.prototype.getMigration = function () {
    return new _ESMigration2.default(this.corpus, this);
  };

  ESBackend.prototype._deserialize = function (boundModel, esData, instance) {
    if (instance) {
      Object.assign(instance.dataValues, esData._source);
    } else {
      instance = boundModel._createInstance(esData._source);
    }
    if (esData._id) {
      instance._id = esData._id;
    }
    if (esData._index) {
      instance._index = esData._index;
    }
    if (esData._version) {
      instance._version = esData._version;
    }
    if (esData._type) {
      instance._type = esData._type;
    }
    if (esData._score) {
      instance._score = esData._score;
    }
    if (esData._routing) {
      instance._routing = esData._routing;
    }
    if (esData._parent) {
      instance._parent = esData._parent;
    }
    instance._clearChanges();
    return instance;
  };

  ESBackend.prototype.find = function (boundModel, options) {
    return this.api.findRaw(boundModel.getIndex(), boundModel.getDefaultType(), {
      size: 1,
      body: options.elasticsearch_query
    }).then(function (_this) {
      return function (rst) {
        if (!rst || !rst.hits || rst.hits.total === 0) {
          return void 0;
        } else {
          return _this._deserialize(boundModel, rst.hits.hits[0]);
        }
      };
    }(this));
  };

  ESBackend.prototype.findAll = function (boundModel, options) {
    var ref, searchParams;
    searchParams = {};
    searchParams.body = options.elasticsearch_query ? options.elasticsearch_query : (ref = options.cursor) != null ? ref.query : void 0;
    if (options.cursor) {
      searchParams.from = options.cursor.offset;
      searchParams.size = options.cursor.limit;
    } else {
      if (options.offset) {
        searchParams.from = options.offset;
      }
      if (options.limit) {
        searchParams.size = options.limit;
      }
    }
    return this.api.findRaw(boundModel.getIndex(), boundModel.getDefaultType(), searchParams).then(function (_this) {
      return function (rst) {
        var data, x;
        if (!rst || !rst.hits) {
          return new _ESResultSet2.default([], 0, 0, null, 0);
        } else {
          data = function () {
            var i, len, ref1, results;
            ref1 = rst.hits.hits;
            results = [];
            for (i = 0, len = ref1.length; i < len; i++) {
              x = ref1[i];
              results.push(this._deserialize(boundModel, x));
            }
            return results;
          }.call(_this);
          return new _ESResultSet2.default(data, rst.hits.total, searchParams.from, searchParams.body, rst.hits.max_score);
        }
      };
    }(this));
  };

  ESBackend.prototype._saveNewInstance = function (instance, boundModel) {
    return this.api.createFromInstance(instance, this._deserialize, this);
  };

  ESBackend.prototype._saveOldInstance = function (instance, boundModel) {
    return this.api.updateInstance(instance, this._deserialize, this);
  };

  ESBackend.prototype.save = function (instance, boundModel) {
    if (instance.isNewRecord) {
      return this._saveNewInstance(instance, boundModel);
    } else {
      return this._saveOldInstance(instance, boundModel);
    }
  };

  ESBackend.prototype.destroy = function (instance, boundModel) {
    return this.api.destroyInstance(instance);
  };

  return ESBackend;
}(_ormojo.Backend);